array [1..3] of int: X_INTRODUCED_24 = [1,1,-1];
array [1..2] of int: X_INTRODUCED_43 = [1,-1];
var 1..3: X_INTRODUCED_5;
var 1..3: X_INTRODUCED_6;
var 1..3: X_INTRODUCED_7;
var 1..3: X_INTRODUCED_8;
var 1..3: X_INTRODUCED_9;
var -6..36: reward:: is_defined_var;
var 2..5: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 2..3: X_INTRODUCED_23 ::var_is_introduced ;
var 1..5: X_INTRODUCED_28 ::var_is_introduced :: is_defined_var;
var 1..3: X_INTRODUCED_30 ::var_is_introduced ;
var 0..5: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var 0..3: X_INTRODUCED_36 ::var_is_introduced ;
var -1..5: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var 0..3: X_INTRODUCED_42 ::var_is_introduced ;
array [1..5] of var int: visits:: output_array([1..5]) = [X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
constraint int_min(3,X_INTRODUCED_21,X_INTRODUCED_23);
constraint int_lin_eq([1,1],[X_INTRODUCED_21,X_INTRODUCED_5],5):: defines_var(X_INTRODUCED_21);
constraint int_min(3,X_INTRODUCED_28,X_INTRODUCED_30);
constraint int_lin_eq(X_INTRODUCED_24,[X_INTRODUCED_28,X_INTRODUCED_6,X_INTRODUCED_23],2):: defines_var(X_INTRODUCED_28);
constraint int_min(3,X_INTRODUCED_34,X_INTRODUCED_36);
constraint int_lin_eq(X_INTRODUCED_24,[X_INTRODUCED_34,X_INTRODUCED_7,X_INTRODUCED_30],2):: defines_var(X_INTRODUCED_34);
constraint int_min(3,X_INTRODUCED_40,X_INTRODUCED_42);
constraint int_lin_eq(X_INTRODUCED_24,[X_INTRODUCED_40,X_INTRODUCED_8,X_INTRODUCED_36],2):: defines_var(X_INTRODUCED_40);
constraint int_lin_le(X_INTRODUCED_43,[X_INTRODUCED_6,X_INTRODUCED_23],0);
constraint int_lin_le(X_INTRODUCED_43,[X_INTRODUCED_7,X_INTRODUCED_30],0);
constraint int_lin_le(X_INTRODUCED_43,[X_INTRODUCED_8,X_INTRODUCED_36],0);
constraint int_lin_le(X_INTRODUCED_43,[X_INTRODUCED_9,X_INTRODUCED_42],0);
constraint int_lin_eq([4,1,-2,3,4,-1],[X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,reward],0):: defines_var(reward);
solve  maximize reward;
